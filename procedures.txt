CREATE OR REPLACE PROCEDURE GetTopAlbums (
    criteria IN VARCHAR2,
    topN IN NUMBER,
    result OUT SYS_REFCURSOR
) AS
BEGIN
    IF criteria = 'Alphabetically' THEN
        OPEN result FOR
            SELECT album_name, artist_name, release_date
            FROM (
                SELECT album_name, artist_name, release_date
                FROM albums
                JOIN artists ON albums.artist_id = artists.artist_id
                ORDER BY album_name
            )
            WHERE ROWNUM <= topN;
    ELSIF criteria = 'Date of Release' THEN
        OPEN result FOR
            SELECT album_name, artist_name, release_date
            FROM (
                SELECT album_name, artist_name, release_date
                FROM albums
                JOIN artists ON albums.artist_id = artists.artist_id
                ORDER BY release_date
            )
            WHERE ROWNUM <= topN;
    END IF;
END;
/

CREATE OR REPLACE PROCEDURE GetTopVocalists (
    gender IN VARCHAR2,
    topN IN NUMBER,
    result OUT SYS_REFCURSOR
) AS
BEGIN
    OPEN result FOR
        SELECT artist_name, avg_rating
        FROM (
            SELECT artist_name, AVG(rating) AS avg_rating,
                   ROW_NUMBER() OVER (ORDER BY AVG(rating) DESC) AS rn
            FROM artists
            JOIN songs ON artists.artist_id = songs.artist_id
            JOIN reviews ON songs.song_id = reviews.song_id
            WHERE artists.gender = gender
            GROUP BY artist_name
        )
        WHERE rn <= topN;
END;
/


CREATE OR REPLACE PROCEDURE GetTopArtistsByReleasedSongs (
    topN IN NUMBER,
    result OUT SYS_REFCURSOR
) AS
BEGIN
    OPEN result FOR
        SELECT artist_name, total_songs
        FROM (
            SELECT artist_name, COUNT(song_id) AS total_songs,
                   ROW_NUMBER() OVER (ORDER BY COUNT(song_id) DESC) AS rn
            FROM artists
            JOIN songs ON artists.artist_id = songs.artist_id
            GROUP BY artist_name
        )
        WHERE rn <= topN;
END;
/
